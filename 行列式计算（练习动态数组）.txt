#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#define N 4


int ** mat(int a, int b, int **m,int n) {
	int i, j;
	int **a1 = malloc((n - 1) * sizeof(int*));
	for (i = 0; i < n; i++) {
		a1[i] = (int *)malloc(sizeof(int)*(n - 1));
		for (j = 0; j < n; j++) {
			if (i != a && j != b) {
				if (i > a && j > b) a1[i - 1][j - 1] = m[i][j];
				else if (i > a) a1[i - 1][j] = m[i][j];
				else if (j > b) a1[i][j - 1] = m[i][j];
				else if (i < a && j < b) a1[i][j] = m[i][j];
			}
		}

	}
	return a1;
}

int determinant(int **matrice, int n) {
	int b,a=0;
	int sum = 0;
	if (n == 1) return matrice[0][0];
	else {
		for(b=0;b<n;b++)
		sum+=pow(-1, (a+b))*(matrice[a][b]) * determinant(mat(a, b, matrice,n),n-1);
	}
	return sum;
}

int main() {
	//¿ª±Ù
	int **a = malloc(N * sizeof(int *));
	int i, j;
	for (i = 0; i < N; i++)
		a[i] = malloc(sizeof(int)*N);
	//¸³Öµ
	for (i = 0; i < N; i++)
		for (j = 0; j < N; j++) {
			scanf_s("%d", &a[i][j]);
		}
	//²âÊÔ·Ö¸î
	/*int **a1 = (int **)malloc((N - 1) * sizeof(int*));
	for (i = 0; i < N - 1; i++) {
		a1[i] = (int *)malloc(sizeof(int)*(N - 1));
	}
	a1 = mat(2, 2,a,N);
	for (i = 0; i < N-1; i++) {
		for (j = 0; j < N-1; j++) {
			printf("%d ", a1[i][j]);
		}
		printf("\n");
	}*/
	int k;
	k = determinant(a, N);
	printf("%d",k);
	system("pause");
	return 0;
}